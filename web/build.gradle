// see also ../storeys/build.gradle

plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.2'
}

ext {
  vertxVersion = '3.5.1'
}

dependencies {
    implementation project(':storeys')
    implementation project(':scratch')

    implementation 'org.osgi:org.osgi.core:6.0.0'
    implementation 'ch.vorburger.minecraft.osgi:api:1.0.0'

    compile "io.vertx:vertx-core:$vertxVersion"
    compile "io.vertx:vertx-web:$vertxVersion"

    compile "io.vertx:vertx-codegen:$vertxVersion"
    compile "io.vertx:vertx-service-proxy:$vertxVersion"
    annotationProcessor "io.vertx:vertx-service-proxy:$vertxVersion:processor"

    compileOnly "io.vertx:vertx-lang-js:$vertxVersion"
    compile "io.vertx:vertx-sockjs-service-proxy:$vertxVersion"

    testCompile "io.vertx:vertx-unit:$vertxVersion"
    testCompile "org.seleniumhq.selenium:selenium-java:3.12.0"
    testCompile 'io.github.bonigarcia:webdrivermanager:2.2.1'
}

shadowJar {
  // Relocate shaded Netty dependency, because Minecraft Server uses (a very OLD version of!) Netty itself
  // causing java.lang.NoSuchMethodError: io.netty.util.NetUtil.isIpV4StackPreferred()Z at io.netty.resolver.dns.DnsNameResolver.<clinit>(DnsNameResolver.java:103)
  relocate 'io.netty', 'ch.vorburger.relocated.io.netty'

  // [02:40:01 ERROR] [io.vertx.ext.web.impl.RoutingContextImplBase]: Unexpected exception in route
  // Relocate Jackson, because with SpongeVanilla 1.12.2-7.1.0-BETA-13 (but not yet with 1.10.2-5.1.0-BETA-374)
  // we otherwise hit java.lang.NoClassDefFoundError: com/fasterxml/jackson/databind/ObjectMapper
  // Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.databind.ObjectMapper
  // java.lang.NoClassDefFoundError: Could not initialize class io.vertx.core.json.Json
  // at io.vertx.core.json.JsonObject.encode(JsonObject.java:766) ~[JsonObject.class:?]
  relocate 'com.fasterxml', 'ch.vorburger.relocated.com.fasterxml'

  // Exclude the Sponge Plugin class of our base (non-web) project, because our StoreysWebPlugin class also extends the AbstractStoreysPlugin
  exclude 'ch/vorburger/minecraft/storeys/plugin/StoreysPlugin.class'

  dependencies {
    // http://imperceptiblethoughts.com/shadow/#filtering_dependencies
    // NB "not being able to filter entire transitive dependency graphs"
    // so instead of using exclude dependency we just do explicit include:
    include(project(':storeys'))
    include(project(':scratch'))
    include(dependency("io.vertx:vertx-core"))
    include(dependency("io.vertx:vertx-web"))
    include(dependency("io.vertx:vertx-auth-common"))
    include(dependency("io.vertx:vertx-bridge-common"))
    // having to repeat all of Vert.x's Netty dependencies here feel stupid,
    // but there doesn't seem to be an easier way; the alternative would be
    // to instead of include only use exclude of all of spongepowered's libs.
    include(dependency("io.netty:netty-common"))
    include(dependency("io.netty:netty-buffer"))
    include(dependency("io.netty:netty-transport"))
    include(dependency("io.netty:netty-resolver"))
    include(dependency("io.netty:netty-resolver-dns"))
    include(dependency("io.netty:netty-handler"))
    include(dependency("io.netty:netty-handler-proxy"))
    include(dependency("io.netty:netty-codec"))
    include(dependency("io.netty:netty-codec-dns"))
    include(dependency("io.netty:netty-codec-socks"))
    include(dependency("io.netty:netty-codec-http"))
    include(dependency("io.netty:netty-codec-http2"))
    include(dependency("com.fasterxml.jackson.core:jackson-core"))
    include(dependency("com.fasterxml.jackson.core:jackson-databind"))
    include(dependency("com.fasterxml.jackson.core:jackson-annotations"))

    // must repeat those from ../storeys/build.gradle here:
    include(dependency("ch.vorburger.minecraft.osgi:api"))
    include(dependency('com.spotify:futures-extra'))
  }
}

artifacts {
    shadowJar;
}

assemble.dependsOn(shadowJar);
